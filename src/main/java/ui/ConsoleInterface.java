package ui;

import bl.ReportsManager;

import javax.naming.OperationNotSupportedException;
import java.io.File;
import java.io.IOException;
import java.util.Objects;
import java.util.Scanner;

public class ConsoleInterface {
    public static final String ANSI_GREEN = "\u001B[32m";
    public static final String ANSI_RED = "\u001B[31m";
    public static final String ANSI_RESET = "\u001B[0m";
    private static final Scanner sc = new Scanner(System.in);
    private static final File folder = new File("src\\main\\resources\\");
    private static final ReportsManager reportsManager = new ReportsManager(folder);
    //todo: —Å–¥–µ–ª–∞—Ç—å –∫–æ–Ω—Å–æ–ª—å–Ω–æ–µ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ
    public static void main(String[] args) {
        printStartMessage();
        while (true) {
            System.out.print("–í–≤–µ–¥–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É: ");
            var command = readUserCommand();
            if (Objects.isNull(command)) {
                continue;
            }
            switch (command) {
                case ReadMonthReports -> {
                    readMonthlyReports();
                } case ReadYearReport -> {
                    readYearReport();
                } case CompareReports -> {
                    compareReports();
                } case ShowMonthsInfo -> {
                    showMonthsInfo();
                } case  ShowYearInfo -> {
                    showYearInfo();
                } case Help -> {
                    printHelpMessage();
                } case Exit -> {
                    System.out.println("–•–æ—Ä–æ—à–µ–≥–æ –¥–Ω—è!");
                    System.exit(0);
                }
            }
        }
    }

    private static void readYearReport() {
        try {
            reportsManager.readYearReport();
            System.out.println(ANSI_GREEN + "–ì–æ–¥–æ–≤–æ–π –æ—Ç—á—ë—Ç –±—ã–ª —É—Å–ø–µ—à–Ω–æ –ø—Ä–æ—á–∏—Ç–∞–Ω" + ANSI_RESET);
        } catch (IOException | NumberFormatException e) {
            printErrorMessage("–û—à–∏–±–∫–∞ –ø—Ä–∏ —á—Ç–µ–Ω–∏–∏ —Ñ–∞–π–ª–∞. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ñ–æ—Ä–º–∞—Ç –∏ –ø–æ–ª—è —Ñ–∞–π–ª–∞ –≥–æ–¥–æ–≤–æ–≥–æ –æ—Ç—á—ë—Ç–∞");
        }

    }

    private static void readMonthlyReports() {
        try {
            reportsManager.readMonthlyReports();
            System.out.println(ANSI_GREEN + "–ú–µ—Å—è—á–Ω—ã–µ –æ—Ç—á—ë—Ç—ã –±—ã–ª–∏ —É—Å–ø–µ—à–Ω–æ –ø—Ä–æ—á–∏—Ç–∞–Ω—ã" + ANSI_RESET);
        } catch (IOException | NumberFormatException e) {
            printErrorMessage("–û—à–∏–±–∫–∞ –ø—Ä–∏ —á—Ç–µ–Ω–∏–∏ —Ñ–∞–π–ª–∞. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ñ–æ—Ä–º–∞—Ç –∏ –ø–æ–ª—è —Ñ–∞–π–ª–æ–≤ —Å –º–µ—Å—è—á–Ω—ã–º–∏ –æ—Ç—á—ë—Ç–∞–º–∏");
        }
    }

    private static void showYearInfo() {
        if (!reportsManager.isYearReportRead()) {
            printErrorMessage("–ì–æ–¥–æ–≤—ã–µ –æ—Ç—á—ë—Ç—ã –µ—â—ë –Ω–µ –±—ã–ª–∏ –ø—Ä–æ—á–∏—Ç–∞–Ω—ã. –°–Ω–∞—á–∞–ª–∞ –ø—Ä–æ—á–∏—Ç–∞–π—Ç–µ –≥–æ–¥–æ–≤—ã–µ –æ—Ç—á—ë—Ç—ã.");
            printErrorMessage("–û–ø–µ—Ä–∞—Ü–∏—è –æ—Ç–º–µ–Ω–µ–Ω–∞");
            return;
        }

        var yearReport = reportsManager.getYearReportInformation();
        System.out.println(yearReport.getYear() + " –≥–æ–¥.");
        for (var monthInfo : yearReport.getOperationsProfit()) {
            System.out.printf("""
                    üóì –ú–µ—Å—è—Ü: %s, –ø—Ä–∏–±—ã–ª—å: %s
                    """, monthInfo.getName(), monthInfo.getSum());
        }
        System.out.printf("""
                
                üìâ –°—Ä–µ–¥–Ω–∏–π —Ä–∞—Å—Ö–æ–¥ –≤ –º–µ—Å—è—Ü: %.2f
                """, yearReport.getAverageYearlyExpense());
        System.out.printf("""
                üìà –°—Ä–µ–¥–Ω–∏–π –¥–æ—Ö–æ–¥ –≤ –º–µ—Å—è—Ü: %.2f
                """, yearReport.getAverageYearlyProfit());
    }

    private static void showMonthsInfo() {
        if (!reportsManager.isMonthlyReportsRead()) {
            printErrorMessage("–ú–µ—Å—è—á–Ω—ã–µ –æ—Ç—á—ë—Ç—ã –µ—â—ë –Ω–µ –±—ã–ª–∏ –ø—Ä–æ—á–∏—Ç–∞–Ω—ã. –°–Ω–∞—á–∞–ª–∞ –ø—Ä–æ—á–∏—Ç–∞–π—Ç–µ –º–µ—Å—è—á–Ω—ã–µ –æ—Ç—á—ë—Ç—ã.");
            printErrorMessage("–û–ø–µ—Ä–∞—Ü–∏—è –æ—Ç–º–µ–Ω–µ–Ω–∞");
            return;
        }

        var monthlyReports = reportsManager.getMonthlyReportsInformation();
        for (var monthReport : monthlyReports) {
            var mostProfitable = monthReport.getMostProfitable();
            var mostUnprofitable = monthReport.getMostUnprofitable();
            String monthName = monthReport.getMonth().substring(0, 1).toUpperCase()
                    + monthReport.getMonth().substring(1);
            System.out.printf("""
                
                üóì %s:
                üí∞ –°–∞–º—ã–π –ø—Ä–∏–±—ã–ª—å–Ω—ã–π —Ç–æ–≤–∞—Ä: %s, –ø—Ä–∏–±—ã–ª—å: %s
                üìâ –°–∞–º–∞—è –±–æ–ª—å—à–∞—è —Ç—Ä–∞—Ç–∞: %s, —Ä–∞—Å—Ö–æ–¥: %s
                
                """, monthName,
                    mostProfitable.getName(), mostProfitable.getSum(),
                    mostUnprofitable.getName(), mostUnprofitable.getSum());
        }
        System.out.println(ANSI_GREEN + "–í—ã–≤–æ–¥ –æ–∫–æ–Ω—á–µ–Ω." + ANSI_RESET);
    }

    private static void compareReports() {
        if (!reportsManager.isMonthlyReportsRead() || !reportsManager.isYearReportRead()) {
            if (!reportsManager.isMonthlyReportsRead()) {
                printErrorMessage("–ú–µ—Å—è—á–Ω—ã–µ –æ—Ç—á—ë—Ç—ã –µ—â—ë –Ω–µ –±—ã–ª–∏ –ø—Ä–æ—á–∏—Ç–∞–Ω—ã. –°–Ω–∞—á–∞–ª–∞ –ø—Ä–æ—á–∏—Ç–∞–π—Ç–µ –º–µ—Å—è—á–Ω—ã–µ –æ—Ç—á—ë—Ç—ã.");
                printErrorMessage("–û–ø–µ—Ä–∞—Ü–∏—è –æ—Ç–º–µ–Ω–µ–Ω–∞");
            }
            if (!reportsManager.isYearReportRead()) {
                printErrorMessage("–ì–æ–¥–æ–≤—ã–µ –æ—Ç—á—ë—Ç—ã –µ—â—ë –Ω–µ –±—ã–ª–∏ –ø—Ä–æ—á–∏—Ç–∞–Ω—ã. –°–Ω–∞—á–∞–ª–∞ –ø—Ä–æ—á–∏—Ç–∞–π—Ç–µ –≥–æ–¥–æ–≤—ã–µ –æ—Ç—á—ë—Ç—ã.");
                printErrorMessage("–û–ø–µ—Ä–∞—Ü–∏—è –æ—Ç–º–µ–Ω–µ–Ω–∞");
            }
            return;
        }


        var mistakeMonths = reportsManager.findReportsMistake();
        if (mistakeMonths.size() == 0) {
            System.out.println(ANSI_GREEN + "–û—à–∏–±–æ–∫ –≤ –æ—Ç—á—ë—Ç–∞—Ö –Ω–µ –Ω–∞–π–¥–µ–Ω–æ." + ANSI_RESET);
            return;
        }

        for (var mistake : mistakeMonths) {
            System.out.printf(ANSI_RED + "–û—à–∏–±–∫–∞ –≤ –º–µ—Å—è—Ü–µ %s\n" + ANSI_RESET, mistake.getMonth());
        }
    }

    public static Command readUserCommand() {
        String commandString = sc.nextLine();
        Command command;
        try {
            command = Command.values()[Integer.parseInt(commandString) - 1];
            return command;
        } catch (NumberFormatException | ArrayIndexOutOfBoundsException e) {
            for (var curCommand : Command.values()) {
                if (curCommand.getTitle().equalsIgnoreCase(commandString)) {
                    return curCommand;
                }
            }
        }
        printErrorMessage(String.format(
                "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞ %s. –í–≤–µ–¥–∏—Ç–µ \"–ü–æ–º–æ—â—å\" –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–æ–º–∞–Ω–¥",commandString));
        return null;
    }

    private static void printErrorMessage(String description) {
        System.out.printf(ANSI_RED + "\n–û—à–∏–±–∫–∞. %s\n" + ANSI_RESET, description);
    }

    public static void printStartMessage() {
        System.out.println("""
                            üìÜ–î–æ–±—Ä–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏ —Å—É—Ç–æ–∫. –í–∞—Å –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ "–ê–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è –±—É—Ö–≥–∞–ª—Ç–µ—Ä–∏–∏"üìÜ
                                –ï—Å–ª–∏ –í—ã –∑–¥–µ—Å—å –≤–ø–µ—Ä–≤—ã–µ, –≤–≤–µ–¥–∏—Ç–µ "–ü–æ–º–æ—â—å" –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ –≤—Å–µ—Ö –∫–æ–º–∞–Ω–¥.
                """);
    }
    public static void printHelpMessage() {
        System.out.println("""
                                                            üîß–ü–û–ú–û–©–¨üîß
                –î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:
                1. üìë "–°—á–∏—Ç–∞—Ç—å –º–µ—Å—è—á–Ω—ã–µ –æ—Ç—á—ë—Ç—ã" - —Å—á–∏—Ç—ã–≤–∞–µ—Ç –≤—Å–µ –æ—Ç—á—ë—Ç—ã –∏–∑ –∑–∞—Ä–∞–Ω–µ–µ –∏–∑–≤–µ—Å—Ç–Ω–æ–π –ø–∞–ø–∫–∏.
                2. üßæ "–°—á–∏—Ç–∞—Ç—å –≥–æ–¥–æ–≤–æ–π –æ—Ç—á—ë—Ç" - —Å—á–∏—Ç—ã–≤–∞–µ—Ç –≥–æ–¥–æ–≤–æ–π –æ—Ç—á—ë—Ç –∏–∑ –∑–∞—Ä–∞–Ω–µ–µ –∏–∑–≤–µ—Å—Ç–Ω–æ–π –ø–∞–ø–∫–∏
                3. üìä "–°–≤–µ—Ä–∏—Ç—å –æ—Ç—á—ë—Ç—ã" - —Å–≤–µ—Ä—è–µ—Ç –¥–∞–Ω–Ω—ã–µ –≤ –º–µ—Å—è—á–Ω—ã—Ö –∏ –≥–æ–¥–æ–≤–æ–º –æ—Ç—á—ë—Ç–∞—Ö. –í—ã–≤–æ–¥–∏—Ç —Å–ø–∏—Å–æ–∫ –º–µ—Å—è—Ü–µ–≤, –≥–¥–µ –±—ã–ª–∞ –¥–æ–ø—É—â–µ–Ω–∞ –æ—à–∏–±–∫–∞
                4. üìí "–ü–æ–∫–∞–∑–∞—Ç—å –º–µ—Å—è—á–Ω—ã–µ –æ—Ç—á—ë—Ç—ã" - –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –∏–∑ –≤—Å–µ—Ö –º–µ—Å—è—á–Ω—ã—Ö –æ—Ç—á—ë—Ç–æ–≤
                5. üìï "–ü–æ–∫–∞–∑–∞—Ç—å –≥–æ–¥–æ–≤–æ–π –æ—Ç—á—ë—Ç" - –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –∏–∑ –≥–æ–¥–æ–≤–æ–≥–æ –æ—Ç—á—ë—Ç–∞
                6. ‚ùì "–ü–æ–º–æ—â—å" - –≤—ã–≤–æ–¥–∏—Ç –¥–∞–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
                7. üö™ "–í—ã—Ö–æ–¥" - –∑–∞–≤–µ—Ä—à–∞–µ—Ç —Ä–∞–±–æ—Ç—É –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
                
                            –¢–∞–∫–∂–µ –í—ã –º–æ–∂–µ—Ç–µ –≤–≤–µ—Å—Ç–∏ –ø—Ä–æ—Å—Ç–æ –Ω–æ–º–µ—Ä –∫–æ–º–∞–Ω–¥—ã –∏–∑ —Å–ø–∏—Å–∫–∞, –µ—Å–ª–∏ –í–∞–º —Ç–∞–∫ –±—É–¥–µ—Ç —É–¥–æ–±–Ω–µ–µ.
                                                        –£–¥–∞—á–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è.
                """);
    }
}
